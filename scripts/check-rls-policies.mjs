#!/usr/bin/env node

console.log('üîç Verificando pol√≠ticas RLS de la tabla reservas...\n');

const SUPABASE_URL = 'https://qrgelocijmwnxcckxbdg.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFyZ2Vsb2Npam13bnhjY2t4YmRnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc4MDI0MjksImV4cCI6MjA3MzM3ODQyOX0.0q_3bb8bKR8VVZZAK_hYvhvLSTaU1ioQzmO5fKALjbI';

async function checkPublicAccess() {
  console.log('üîç Verificando acceso p√∫blico a la tabla reservas...');
  
  try {
    const response = await fetch(`${SUPABASE_URL}/rest/v1/reservas?limit=5`, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${SUPABASE_ANON_KEY}`,
        'apikey': SUPABASE_ANON_KEY,
        'Content-Type': 'application/json'
      }
    });

    console.log(`üìä Status: ${response.status}`);
    
    if (response.status === 200) {
      const data = await response.json();
      console.log('‚ùå PROBLEMA DE SEGURIDAD: La tabla es p√∫blicamente accesible');
      console.log(`üìã Se pueden acceder a ${data.length} registros sin autenticaci√≥n`);
      
      if (data.length > 0) {
        console.log('\nüö® DATOS SENSIBLES EXPUESTOS:');
        data.forEach((reserva, index) => {
          console.log(`\n${index + 1}. Cliente: ${reserva.nombre || 'N/A'}`);
          console.log(`   Email: ${reserva.email || 'N/A'}`);
          console.log(`   Tel√©fono: ${reserva.telefono || 'N/A'}`);
          console.log(`   RUT: ${reserva.rut || 'N/A'}`);
          console.log(`   ID: ${reserva.id}`);
        });
      }
      return true; // Hay problema de seguridad
    } else {
      console.log('‚úÖ La tabla est√° protegida (no accesible p√∫blicamente)');
      return false; // No hay problema
    }
  } catch (error) {
    console.log(`‚ùå Error verificando acceso: ${error.message}`);
    return true; // Asumir que hay problema si hay error
  }
}

async function checkTotalRecords() {
  console.log('\nüîç Verificando n√∫mero total de registros...');
  
  try {
    const response = await fetch(`${SUPABASE_URL}/rest/v1/reservas?select=count`, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${SUPABASE_ANON_KEY}`,
        'apikey': SUPABASE_ANON_KEY,
        'Content-Type': 'application/json'
      }
    });

    if (response.status === 200) {
      const data = await response.json();
      console.log(`üìä Total de registros accesibles: ${data.length || 'No disponible'}`);
    } else {
      console.log('‚úÖ No se puede acceder al conteo (tabla protegida)');
    }
  } catch (error) {
    console.log(`‚ùå Error obteniendo conteo: ${error.message}`);
  }
}

async function main() {
  console.log('üöÄ Iniciando verificaci√≥n de seguridad RLS...\n');
  
  const hasSecurityIssue = await checkPublicAccess();
  await checkTotalRecords();
  
  console.log('\nüìä RESUMEN DE SEGURIDAD:');
  console.log('‚ïê'.repeat(50));
  
  if (hasSecurityIssue) {
    console.log('‚ùå PROBLEMA CR√çTICO DE SEGURIDAD IDENTIFICADO');
    console.log('\nüö® RIESGOS:');
    console.log('‚Ä¢ Datos personales de clientes expuestos');
    console.log('‚Ä¢ Posible robo de identidad');
    console.log('‚Ä¢ Violaci√≥n de privacidad');
    console.log('‚Ä¢ Incumplimiento de normativas de protecci√≥n de datos');
    
    console.log('\nüîß ACCIONES REQUERIDAS:');
    console.log('1. Deshabilitar acceso p√∫blico a la tabla reservas');
    console.log('2. Implementar pol√≠ticas RLS apropiadas');
    console.log('3. Permitir acceso solo a usuarios autenticados');
    console.log('4. Restringir acceso a Edge Functions autorizadas');
    console.log('5. Auditar todos los accesos a datos sensibles');
  } else {
    console.log('‚úÖ La tabla reservas est√° correctamente protegida');
    console.log('‚úÖ No hay exposici√≥n de datos sensibles');
  }
  
  console.log('\n‚ú® Verificaci√≥n de seguridad completada');
}

main().catch(console.error);
