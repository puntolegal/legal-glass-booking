#!/usr/bin/env node

/**
 * Script para probar el flujo completo de MercadoPago
 * Verifica que el backend est√© funcionando y que se puedan crear preferencias
 */

// Usar fetch nativo de Node.js (disponible desde v18)

const BACKEND_URL = 'http://localhost:3001';
const FRONTEND_URL = 'http://localhost:8081';

async function testBackendHealth() {
  console.log('üîç Verificando salud del backend...');
  
  try {
    const response = await fetch(`${BACKEND_URL}/health`);
    const data = await response.json();
    
    if (data.status === 'OK') {
      console.log('‚úÖ Backend funcionando correctamente');
      return true;
    } else {
      console.log('‚ùå Backend no responde correctamente');
      return false;
    }
  } catch (error) {
    console.log('‚ùå Error conectando al backend:', error.message);
    return false;
  }
}

async function testCreatePreference() {
  console.log('\nüîç Probando creaci√≥n de preferencia...');
  
  const testPaymentData = {
    service: 'Consulta General - Punto Legal',
    price: 1000,
    name: 'Juan P√©rez',
    email: 'juan@ejemplo.com',
    phone: '+56912345678',
    date: '2025-09-23',
    time: '10:00',
    description: 'Consulta legal agendada para 2025-09-23 a las 10:00'
  };

  try {
    const response = await fetch(`${BACKEND_URL}/create-preference`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ paymentData: testPaymentData })
    });

    const data = await response.json();
    
    if (data.success && data.preference_id) {
      console.log('‚úÖ Preferencia creada exitosamente');
      console.log('   ID:', data.preference_id);
      console.log('   Init Point:', data.init_point);
      return true;
    } else {
      console.log('‚ùå Error creando preferencia:', data.error);
      return false;
    }
  } catch (error) {
    console.log('‚ùå Error en la petici√≥n:', error.message);
    return false;
  }
}

async function testFrontendConnection() {
  console.log('\nüîç Verificando conexi√≥n al frontend...');
  
  try {
    const response = await fetch(FRONTEND_URL);
    
    if (response.ok) {
      console.log('‚úÖ Frontend accesible');
      return true;
    } else {
      console.log('‚ùå Frontend no accesible:', response.status);
      return false;
    }
  } catch (error) {
    console.log('‚ùå Error conectando al frontend:', error.message);
    return false;
  }
}

async function runCompleteTest() {
  console.log('üöÄ Iniciando prueba completa del flujo MercadoPago\n');
  
  const backendOk = await testBackendHealth();
  const frontendOk = await testFrontendConnection();
  const preferenceOk = backendOk ? await testCreatePreference() : false;
  
  console.log('\nüìä Resumen de pruebas:');
  console.log('====================');
  console.log(`Backend MercadoPago: ${backendOk ? '‚úÖ OK' : '‚ùå FALLO'}`);
  console.log(`Frontend React: ${frontendOk ? '‚úÖ OK' : '‚ùå FALLO'}`);
  console.log(`Creaci√≥n de preferencias: ${preferenceOk ? '‚úÖ OK' : '‚ùå FALLO'}`);
  
  if (backendOk && frontendOk && preferenceOk) {
    console.log('\nüéâ ¬°Todas las pruebas pasaron! El sistema est√° listo para producci√≥n.');
    console.log('\nüåê URLs disponibles:');
    console.log(`   Frontend: ${FRONTEND_URL}`);
    console.log(`   Backend: ${BACKEND_URL}`);
    console.log('\nüí° Para probar el flujo completo:');
    console.log('   1. Ve a http://localhost:8081/agendamiento?plan=general');
    console.log('   2. Completa el formulario');
    console.log('   3. Usa el c√≥digo PUNTOLEGALADMIN para precio de $1.000');
    console.log('   4. Procede al pago con MercadoPago');
  } else {
    console.log('\n‚ö†Ô∏è Algunas pruebas fallaron. Revisa la configuraci√≥n.');
  }
}

runCompleteTest().catch(console.error);
