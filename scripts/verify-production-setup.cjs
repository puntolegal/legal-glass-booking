#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîç VERIFICACI√ìN DE CONFIGURACI√ìN DE PRODUCCI√ìN');
console.log('==============================================');
console.log('');

// Verificar archivo .env
const envPath = path.join(process.cwd(), '.env');
let envConfig = {};

if (fs.existsSync(envPath)) {
  const envContent = fs.readFileSync(envPath, 'utf8');
  envContent.split('\n').forEach(line => {
    const [key, value] = line.split('=');
    if (key && value) {
      envConfig[key.trim()] = value.trim();
    }
  });
  console.log('‚úÖ Archivo .env encontrado');
} else {
  console.log('‚ùå Archivo .env no encontrado');
}

console.log('');
console.log('üìã VERIFICACI√ìN DE CREDENCIALES:');
console.log('===============================');

// Verificar Public Key
const publicKey = envConfig['VITE_MERCADOPAGO_PUBLIC_KEY'];
if (publicKey && publicKey.startsWith('APP_USR-e02e0cc8')) {
  console.log('‚úÖ Public Key de PRODUCCI√ìN configurado');
  console.log(`   ${publicKey.substring(0, 30)}...`);
} else if (publicKey && publicKey.startsWith('APP_USR-a7d7e95c')) {
  console.log('‚ö†Ô∏è  Public Key de PRUEBA detectado');
  console.log('   Cambia a credenciales de producci√≥n');
} else {
  console.log('‚ùå Public Key no configurado o inv√°lido');
}

// Verificar Access Token
const accessToken = envConfig['MERCADOPAGO_ACCESS_TOKEN'];
if (accessToken && accessToken.startsWith('APP_USR-57706641806639')) {
  console.log('‚úÖ Access Token de PRODUCCI√ìN configurado');
  console.log(`   ${accessToken.substring(0, 30)}...`);
} else if (accessToken && accessToken.startsWith('APP_USR-4010337867785275')) {
  console.log('‚ö†Ô∏è  Access Token de PRUEBA detectado');
  console.log('   Cambia a credenciales de producci√≥n');
} else {
  console.log('‚ùå Access Token no configurado o inv√°lido');
}

// Verificar entorno
const environment = envConfig['MERCADOPAGO_ENVIRONMENT'];
if (environment === 'production') {
  console.log('‚úÖ Entorno configurado como PRODUCCI√ìN');
} else {
  console.log('‚ö†Ô∏è  Entorno no configurado o no es producci√≥n');
}

console.log('');
console.log('üîß VERIFICACI√ìN DE ARCHIVOS:');
console.log('============================');

// Verificar configuraci√≥n de MercadoPago
const configPath = path.join(process.cwd(), 'src', 'config', 'mercadopago.ts');
if (fs.existsSync(configPath)) {
  const configContent = fs.readFileSync(configPath, 'utf8');
  if (configContent.includes('APP_USR-e02e0cc8')) {
    console.log('‚úÖ Configuraci√≥n de MercadoPago actualizada');
  } else {
    console.log('‚ö†Ô∏è  Configuraci√≥n de MercadoPago necesita actualizaci√≥n');
  }
} else {
  console.log('‚ùå Archivo de configuraci√≥n no encontrado');
}

// Verificar Edge Function
const edgeFunctionPath = path.join(process.cwd(), 'supabase', 'functions', 'create-mercadopago-preference', 'index.ts');
if (fs.existsSync(edgeFunctionPath)) {
  const functionContent = fs.readFileSync(edgeFunctionPath, 'utf8');
  if (functionContent.includes('APP_USR-57706641806639')) {
    console.log('‚úÖ Edge Function actualizado para producci√≥n');
  } else {
    console.log('‚ö†Ô∏è  Edge Function necesita actualizaci√≥n');
  }
} else {
  console.log('‚ö†Ô∏è  Edge Function no encontrado (opcional)');
}

console.log('');
console.log('üöÄ ESTADO GENERAL:');
console.log('==================');

const hasProductionPublicKey = publicKey && publicKey.startsWith('APP_USR-e02e0cc8');
const hasProductionAccessToken = accessToken && accessToken.startsWith('APP_USR-57706641806639');
const hasProductionEnv = environment === 'production';

if (hasProductionPublicKey && hasProductionAccessToken) {
  console.log('‚úÖ CONFIGURACI√ìN DE PRODUCCI√ìN COMPLETA');
  console.log('');
  console.log('üéØ PR√ìXIMOS PASOS:');
  console.log('‚Ä¢ Reinicia el servidor si no lo has hecho');
  console.log('‚Ä¢ Prueba con tarjetas de prueba');
  console.log('‚Ä¢ Verifica que los pagos se procesen correctamente');
  console.log('‚Ä¢ Configura webhooks para notificaciones');
} else {
  console.log('‚ùå CONFIGURACI√ìN INCOMPLETA');
  console.log('');
  console.log('üîß ACCIONES REQUERIDAS:');
  if (!hasProductionPublicKey) {
    console.log('‚Ä¢ Configurar Public Key de producci√≥n');
  }
  if (!hasProductionAccessToken) {
    console.log('‚Ä¢ Configurar Access Token de producci√≥n');
  }
  if (!hasProductionEnv) {
    console.log('‚Ä¢ Configurar MERCADOPAGO_ENVIRONMENT=production');
  }
}

console.log('');
console.log('‚ö†Ô∏è  RECORDATORIO DE SEGURIDAD:');
console.log('==============================');
console.log('‚Ä¢ Ahora se procesar√°n PAGOS REALES');
console.log('‚Ä¢ Usa solo tarjetas de prueba para testing');
console.log('‚Ä¢ Verifica todas las transacciones');
console.log('‚Ä¢ Mant√©n las credenciales seguras');
console.log('');
