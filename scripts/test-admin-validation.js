#!/usr/bin/env node

/**
 * Script para probar la validaci√≥n inmediata del c√≥digo PUNTOLEGALADMIN
 * Verifica que se muestre la confirmaci√≥n y se permita continuar
 */

console.log('üß™ Probando validaci√≥n inmediata del c√≥digo PUNTOLEGALADMIN...\n');

// Simular la l√≥gica de validaci√≥n
const CODIGO_CONVENIO_VALIDO = "PUNTOLEGAL!";
const CODIGO_ADMIN_VALIDO = "PUNTOLEGALADMIN";

function testValidation(codigoConvenio) {
  console.log(`\nüìù Probando c√≥digo: "${codigoConvenio}"`);
  console.log('='.repeat(50));
  
  const isConvenioValido = codigoConvenio === CODIGO_CONVENIO_VALIDO;
  const isAdminValido = codigoConvenio === CODIGO_ADMIN_VALIDO;
  
  console.log(`‚úÖ C√≥digo ingresado: "${codigoConvenio}"`);
  console.log(`‚úÖ ¬øConvenio v√°lido?: ${isConvenioValido ? 'S√ç' : 'NO'}`);
  console.log(`‚úÖ ¬øAdmin v√°lido?: ${isAdminValido ? 'S√ç' : 'NO'}`);
  
  // Simular estilos del input
  let inputStyle = 'bg-gray-50 border-gray-200';
  if (isAdminValido) {
    inputStyle = 'bg-purple-50 border-purple-300';
  } else if (isConvenioValido) {
    inputStyle = 'bg-green-50 border-green-300';
  }
  
  console.log(`‚úÖ Estilo del input: ${inputStyle}`);
  
  // Simular mensaje de confirmaci√≥n
  let confirmacion = '';
  if (isAdminValido) {
    confirmacion = 'C√≥digo admin v√°lido - Precio especial $1.000 aplicado';
    console.log(`‚úÖ Mensaje: "${confirmacion}"`);
    console.log(`‚úÖ Color: P√∫rpura`);
  } else if (isConvenioValido) {
    confirmacion = 'C√≥digo v√°lido - Descuento del 80% aplicado';
    console.log(`‚úÖ Mensaje: "${confirmacion}"`);
    console.log(`‚úÖ Color: Verde`);
  } else {
    console.log(`‚ùå Sin confirmaci√≥n`);
  }
  
  // Simular validaci√≥n para continuar
  const puedeContinuar = isConvenioValido || isAdminValido;
  console.log(`‚úÖ ¬øPuede continuar?: ${puedeContinuar ? 'S√ç' : 'NO'}`);
  
  return {
    codigoConvenio,
    isConvenioValido,
    isAdminValido,
    inputStyle,
    confirmacion,
    puedeContinuar
  };
}

// Probar diferentes c√≥digos
const testCases = [
  { codigo: '', descripcion: 'Sin c√≥digo' },
  { codigo: 'PUNTOLEGAL!', descripcion: 'C√≥digo convenio' },
  { codigo: 'PUNTOLEGALADMIN', descripcion: 'C√≥digo admin' },
  { codigo: 'CODIGO_INVALIDO', descripcion: 'C√≥digo inv√°lido' }
];

console.log('üöÄ INICIANDO PRUEBAS DE VALIDACI√ìN\n');

testCases.forEach((testCase, index) => {
  console.log(`\n${'='.repeat(60)}`);
  console.log(`PRUEBA ${index + 1}: ${testCase.descripcion.toUpperCase()}`);
  console.log(`${'='.repeat(60)}`);
  
  const result = testValidation(testCase.codigo);
  
  console.log(`\nüìä RESUMEN:`);
  console.log(`   C√≥digo: "${result.codigoConvenio}"`);
  console.log(`   Validaci√≥n: ${result.isConvenioValido ? 'Convenio' : result.isAdminValido ? 'Admin' : 'Ninguna'}`);
  console.log(`   Confirmaci√≥n: ${result.confirmacion || 'Ninguna'}`);
  console.log(`   Continuar: ${result.puedeContinuar ? 'S√ç' : 'NO'}`);
});

console.log(`\n${'='.repeat(60)}`);
console.log('üéØ VERIFICACI√ìN ESPEC√çFICA PARA PUNTOLEGALADMIN:');

const adminResult = testValidation('PUNTOLEGALADMIN');

if (adminResult.isAdminValido && adminResult.puedeContinuar && adminResult.confirmacion.includes('$1.000')) {
  console.log('‚úÖ PUNTOLEGALADMIN VALIDACI√ìN CORRECTA');
  console.log('‚úÖ Confirmaci√≥n inmediata mostrada');
  console.log('‚úÖ Usuario puede continuar');
  console.log('‚úÖ Precio especial aplicado');
} else {
  console.log('‚ùå PUNTOLEGALADMIN VALIDACI√ìN INCORRECTA');
  console.log(`‚ùå Admin v√°lido: ${adminResult.isAdminValido}`);
  console.log(`‚ùå Puede continuar: ${adminResult.puedeContinuar}`);
  console.log(`‚ùå Confirmaci√≥n: ${adminResult.confirmacion}`);
}

console.log('\nüéâ Prueba de validaci√≥n completada!');
